/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.5 		*/
/*  Created On : 04-feb.-2021 03:50:19 p. m. 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS Area CASCADE
;

DROP TABLE IF EXISTS Cliente CASCADE
;

DROP TABLE IF EXISTS Contrato CASCADE
;

DROP TABLE IF EXISTS Cupo CASCADE
;

DROP TABLE IF EXISTS Cupo_servicio CASCADE
;

DROP TABLE IF EXISTS Parqueadero CASCADE
;

DROP TABLE IF EXISTS Parqueadero_Tarifa CASCADE
;

DROP TABLE IF EXISTS Servicio CASCADE
;

DROP TABLE IF EXISTS Tarifa CASCADE
;

DROP TABLE IF EXISTS Vehiculo CASCADE
;

/* Create Tables */

CREATE TABLE Area
(
	k_idArea varchar(10) NOT NULL,
	k_idParqueadero integer NOT NULL,    -- Llave primaria de la entidad fuerte parqueadero
	q_cuposTotales integer NOT NULL,    -- Cantidad de cupos dentro del area
	i_tipo integer NOT NULL,    -- Es el indicador que representa el tipo de vehiculo que puede ubicarse en el area. 1 - carro  2- campero  3-camioneta  4-vehiculos pesados  5-motocicletas   6-bicicletas
	q_cuposDisponibles integer NULL    -- Representa los cupos que se encuentran libres
)
;

CREATE TABLE Cliente
(
	k_cedula integer NOT NULL,    -- se identifica a los clientes apatir de la cedula.
	n_primerNombre varchar(20) NOT NULL,    -- Primer nombre del cliente
	n_primerApellido varchar(20) NOT NULL,    -- Primer apellido del cliente
	n_segundoApellido varchar(20) NOT NULL,    -- segundo apellido del cliente
	n_direccion varchar(30) NOT NULL,    -- ubicaci贸n de la residencia actual del cliente.
	q_telefono integer NOT NULL    -- Telefono de contacto del cliente
)
;

CREATE TABLE Contrato
(
	k_idContrato integer NOT NULL,    -- Identificador del contrato.
	q_costoTotal integer NOT NULL,    -- Precio de la totalidad del contrato.
	f_fechaDeInicio date NOT NULL,    -- fecha desde la cual se inicia el contrato
	f_fechaDeFinalizacion date NULL,    -- Fecha en la cual se da por terminado el contrato
	i_estado char(1) NOT NULL,    -- Permite conocer si el contrato sigue en vigencia.  v- vigente.  f-finalizado.
	k_idParqueadero integer NOT NULL,
	k_cedula integer NOT NULL,    -- documento de identidad del cliente
	k_idVehiculo integer NOT NULL    -- identificador del vehiculo que hace parte del contrato.
)
;

CREATE TABLE Cupo
(
	--k_idCupo integer NOT NULL,    -- Permite identificar los cupos
	i_estado char(1) NOT NULL,    -- incador que permite conocer si el espacio esta vacio, ocupado o reservado.  v - vacio  o - ocupado
	k_idArea varchar(10) NOT NULL,    -- Parte de la llave foraneas de la entidad area
	k_idParqueadero integer NOT NULL    -- Parte de la llave foranea de la entidad area
)
;

CREATE TABLE Cupo_servicio
(
	k_idServicio integer NOT NULL,    -- identificador de entidad servicio.
	k_idCupo integer NOT NULL    -- identificador de entidad cupo.
)
;

CREATE TABLE Parqueadero
(
	k_idParqueadero integer NOT NULL,
	q_areas integer NOT NULL,    -- Representa la cantidad de areas que dividen el parquadero
	n_direccion varchar(25) NOT NULL,    -- ubiaci贸n exacta atravez de notaci贸n de calles y carreras de donde se ubica el parqueadero.
	n_localidad varchar(20) NOT NULL,    -- Localidad donde se ubica el parqueadero, estandariza el valor de demanda zonal del parqueadero.(fnz)
	v_nfs numeric(2,1) NOT NULL    -- Es el conjunto de carteristicas que definen en nivel de servicio con respecto a la cantidad de pisos, el material y numero de cupos. 
)
;

CREATE TABLE Parqueadero_Tarifa
(
	k_idParqueadero integer NOT NULL,    -- identificar de la entidad Parqueadero.
	k_codigoTarifa integer NOT NULL    -- identificar de la entidad Tarifa.
)
;

CREATE TABLE Servicio
(
	k_idServicio integer NOT NULL,    -- identificador del servicio
	f_FYCEntrada timestamp without time zone NOT NULL,    -- Fecha y hora de entrada de un vehiculo.
	f_FYCSalida timestamp without time zone NULL,    -- Fecha y hora de salida de un vehiculo.
	q_valorAPagar integer NOT NULL,    -- valor a pagar por la duraci贸n del servicio.
	k_idVehiculo integer NOT NULL    -- identificador del vehiculo.
)
;

CREATE TABLE Tarifa
(
	k_codigoTarifa integer NOT NULL,    -- identificador del parqueadero.
	q_precioPorMinuto integer NOT NULL,    -- tarifa a cobrar por el minuto de servicio de parqueadero.
	i_tipo varchar(50) NOT NULL    -- Se describe el tipo guiandose por las especifiaciones del parqueadero y los tipos de vehiculo que este acepta 
)
;

CREATE TABLE Vehiculo
(
	k_idVehiculo integer NOT NULL,    -- Identificador del vehiculo.
	n_marca varchar(20) NOT NULL,    -- marca predominante en el vehiculo
	n_color varchar(10) NOT NULL,    -- color predominante el vehiculo.
	i_tipo char(1) NOT NULL    -- Es el indicador que representa el tipo de vehiculo.  1 - carro  2- campero  3-camioneta  4-vehiculos pesados  5-motocicletas   6-bicicletas
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE Area ADD CONSTRAINT PK_Area
	PRIMARY KEY (k_idArea,k_idParqueadero)
;

ALTER TABLE Area ADD CONSTRAINT CK_i_tipo CHECK (i_tipo in ('1','2','3','4','5','6'))
;

ALTER TABLE Area ADD CONSTRAINT CK_q_cuposTotales CHECK (q_cuposTotales > 0)
;

ALTER TABLE Area ADD CONSTRAINT CK_q_cuposDisponibles CHECK (q_cuposDisponibles > 0)
;

CREATE INDEX IXFK_Area_Parqueadero ON Area (k_idParqueadero ASC)
;

ALTER TABLE Cliente ADD CONSTRAINT PK_Cliente
	PRIMARY KEY (k_cedula)
;

ALTER TABLE Cliente ADD CONSTRAINT CK_k_cedula CHECK (k_cedula > 0)
;

ALTER TABLE Cliente ADD CONSTRAINT CK_q_telefono CHECK (q_telefono > 0)
;

ALTER TABLE Contrato ADD CONSTRAINT PK_Contrato
	PRIMARY KEY (k_idContrato)
;

ALTER TABLE Contrato ADD CONSTRAINT CK_k_idContrato CHECK (k_idContrato > 0)
;

ALTER TABLE Contrato ADD CONSTRAINT CK_q_costoTotal CHECK (q_costoTotal > 0)
;

ALTER TABLE Contrato ADD CONSTRAINT CK_i_estado CHECK (i_estado in ('v','f'))
;

ALTER TABLE Contrato ADD CONSTRAINT k_idParqueadero CHECK (k_idParqueadero >0)
;

CREATE INDEX IXFK_Contrato_Cliente ON Contrato (k_cedula ASC)
;

CREATE INDEX IXFK_Contrato_Parqueadero ON Contrato (k_idParqueadero ASC)
;

CREATE INDEX IXFK_Contrato_Vehiculo ON Contrato (k_idVehiculo ASC)
;

--ALTER TABLE Cupo ADD CONSTRAINT PK_Cupo
	--PRIMARY KEY (k_idCupo )
--;
ALTER TABLE Cupo ADD COLUMN k_idCupo SERIAL PRIMARY KEY;
ALTER TABLE Cupo ADD CONSTRAINT CK_i_estado CHECK (i_estado in ('v','o','r'))
;

ALTER TABLE Cupo ADD CONSTRAINT CK_k_idCupo CHECK (k_idCupo > 0)
;

CREATE INDEX IXFK_Cupo_Area ON Cupo (k_idArea ASC,k_idParqueadero ASC)
;

ALTER TABLE Cupo_servicio ADD CONSTRAINT PK_Cupo_servicio
	PRIMARY KEY (k_idServicio,k_idCupo)
;

CREATE INDEX IXFK_Cupo_servicio_Cupo ON Cupo_servicio (k_idCupo ASC)
;

CREATE INDEX IXFK_Cupo_servicio_Servicio ON Cupo_servicio (k_idServicio ASC)
;

ALTER TABLE Parqueadero ADD CONSTRAINT PK_Parqueadero
	PRIMARY KEY (k_idParqueadero)
;

ALTER TABLE Parqueadero ADD CONSTRAINT CK_k_idParqueadero CHECK (k_idParqueadero >=0)
;

--ALTER TABLE Parqueadero ADD CONSTRAINT CK_q_areas CHECK (q_cuposTotales >0)--
--;--

ALTER TABLE Parqueadero ADD CONSTRAINT CK_v_nfs CHECK (v_nfs > 0)
;

ALTER TABLE Parqueadero_Tarifa ADD CONSTRAINT PK_Parqueadero_Tarifa
	PRIMARY KEY (k_idParqueadero,k_codigoTarifa)
;

CREATE INDEX IXFK_Parqueadero_Tarifa_Parqueadero ON Parqueadero_Tarifa (k_idParqueadero ASC)
;

CREATE INDEX IXFK_Parqueadero_Tarifa_Tarifa ON Parqueadero_Tarifa (k_codigoTarifa ASC)
;

ALTER TABLE Servicio ADD CONSTRAINT PK_Servicio
	PRIMARY KEY (k_idServicio)
;
--ALTER TABLE Servicio ADD COLUMN k_idServicio SERIAL PRIMARY KEY;

ALTER TABLE Servicio ADD CONSTRAINT CK_k_idServicio CHECK (k_idServicio > 0)
;

ALTER TABLE Servicio ADD CONSTRAINT CK_q_valorAPagar CHECK (q_valorAPagar > 0)
;

ALTER TABLE Servicio ADD CONSTRAINT CK_k_idVehiculo CHECK (k_idVehiculo > 0)
;

CREATE INDEX IXFK_Servicio_Vehiculo ON Servicio (k_idVehiculo ASC)
;

ALTER TABLE Tarifa ADD CONSTRAINT PK_Tarifa
	PRIMARY KEY (k_codigoTarifa)
;

ALTER TABLE Tarifa ADD CONSTRAINT CK_q_precioPorMinuto CHECK (q_precioPorMinuto > 0)
;

ALTER TABLE Tarifa ADD CONSTRAINT CK_k_codigoTarifa CHECK (k_codigoTarifa > 0)
;

ALTER TABLE Vehiculo ADD CONSTRAINT PK_Vehiculo
	PRIMARY KEY (k_idVehiculo)
;

ALTER TABLE Vehiculo ADD CONSTRAINT CK_k_idVehiculo CHECK (k_idVehiculo > 0)
;

ALTER TABLE Vehiculo ADD CONSTRAINT CK_i_tipo CHECK (i_tipo in ('1','2','3','4','5','6'))
;

/* Create Foreign Key Constraints */

ALTER TABLE Area ADD CONSTRAINT FK_Area_Parqueadero
	FOREIGN KEY (k_idParqueadero) REFERENCES Parqueadero (k_idParqueadero) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Contrato ADD CONSTRAINT FK_Contrato_Cliente
	FOREIGN KEY (k_cedula) REFERENCES Cliente (k_cedula) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Contrato ADD CONSTRAINT FK_Contrato_Parqueadero
	FOREIGN KEY (k_idParqueadero) REFERENCES Parqueadero (k_idParqueadero) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Contrato ADD CONSTRAINT FK_Contrato_Vehiculo
	FOREIGN KEY (k_idVehiculo) REFERENCES Vehiculo (k_idVehiculo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cupo ADD CONSTRAINT FK_Cupo_Area
	FOREIGN KEY (k_idArea,k_idParqueadero) REFERENCES Area (k_idArea,k_idParqueadero) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cupo_servicio ADD CONSTRAINT FK_Cupo_servicio_Cupo
	FOREIGN KEY (k_idCupo) REFERENCES Cupo (k_idCupo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cupo_servicio ADD CONSTRAINT FK_Cupo_servicio_Servicio
	FOREIGN KEY (k_idServicio) REFERENCES Servicio (k_idServicio) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Parqueadero_Tarifa ADD CONSTRAINT FK_Parqueadero_Tarifa_Parqueadero
	FOREIGN KEY (k_idParqueadero) REFERENCES Parqueadero (k_idParqueadero) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Parqueadero_Tarifa ADD CONSTRAINT FK_Parqueadero_Tarifa_Tarifa
	FOREIGN KEY (k_codigoTarifa) REFERENCES Tarifa (k_codigoTarifa) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Servicio ADD CONSTRAINT FK_Servicio_Vehiculo
	FOREIGN KEY (k_idVehiculo) REFERENCES Vehiculo (k_idVehiculo) ON DELETE No Action ON UPDATE No Action
;

/* Create Table Comments, Sequences for Autonumber Columns */

COMMENT ON TABLE Area
	IS 'Entidad que respresenta las divisiones del parqueadero'
;

COMMENT ON COLUMN Area.k_idParqueadero
	IS 'Llave primaria de la entidad fuerte parqueadero'
;

COMMENT ON COLUMN Area.q_cuposTotales
	IS 'Cantidad de cupos dentro del area'
;

COMMENT ON COLUMN Area.i_tipo
	IS 'Es el indicador que representa el tipo de vehiculo que puede ubicarse en el area. 1 - carro  2- campero  3-camioneta  4-vehiculos pesados  5-motocicletas   6-bicicletas'
;

COMMENT ON COLUMN Area.q_cuposDisponibles
	IS 'Representa los cupos que se encuentran libres'
;

COMMENT ON TABLE Cliente
	IS 'Esta entidad representa las personas que a firmado unn contrato con el parqueadero'
;

COMMENT ON COLUMN Cliente.k_cedula
	IS 'se identifica a los clientes apatir de la cedula.'
;

COMMENT ON COLUMN Cliente.n_primerNombre
	IS 'Primer nombre del cliente'
;

COMMENT ON COLUMN Cliente.n_primerApellido
	IS 'Primer apellido del cliente'
;

COMMENT ON COLUMN Cliente.n_segundoApellido
	IS 'segundo apellido del cliente'
;

COMMENT ON COLUMN Cliente.n_direccion
	IS 'ubicaci贸n de la residencia actual del cliente.'
;

COMMENT ON COLUMN Cliente.q_telefono
	IS 'Telefono de contacto del cliente'
;

COMMENT ON TABLE Contrato
	IS 'Entidad que represta el acuerdo del cobro de una tarifa unica por un tiempo determinado.'
;

COMMENT ON COLUMN Contrato.k_idContrato
	IS 'Identificador del contrato.'
;

COMMENT ON COLUMN Contrato.q_costoTotal
	IS 'Precio de la totalidad del contrato.'
;

COMMENT ON COLUMN Contrato.f_fechaDeInicio
	IS 'fecha desde la cual se inicia el contrato'
;

COMMENT ON COLUMN Contrato.f_fechaDeFinalizacion
	IS 'Fecha en la cual se da por terminado el contrato'
;

COMMENT ON COLUMN Contrato.i_estado
	IS 'Permite conocer si el contrato sigue en vigencia.  v- vigente.  f-finalizado.'
;

COMMENT ON COLUMN Contrato.k_cedula
	IS 'documento de identidad del cliente'
;

COMMENT ON COLUMN Contrato.k_idVehiculo
	IS 'identificador del vehiculo que hace parte del contrato.'
;

COMMENT ON TABLE Cupo
	IS 'Es el espacio a ocupar por los vehiculos.'
;

COMMENT ON COLUMN Cupo.k_idCupo
	IS 'Permite identificar los cupos'
;

COMMENT ON COLUMN Cupo.i_estado
	IS 'incador que permite conocer si el espacio esta vacio, ocupado o reservado.  v - vacio  o - ocupado'
;

COMMENT ON COLUMN Cupo.k_idArea
	IS 'Parte de la llave foraneas de la entidad area'
;

COMMENT ON COLUMN Cupo.k_idParqueadero
	IS 'Parte de la llave foranea de la entidad area'
;

COMMENT ON TABLE Cupo_servicio
	IS 'Tabla de rompimiento entre las entidades cupo y servicio.'
;

COMMENT ON COLUMN Cupo_servicio.k_idServicio
	IS 'identificador de entidad servicio.'
;

COMMENT ON COLUMN Cupo_servicio.k_idCupo
	IS 'identificador de entidad cupo.'
;

COMMENT ON TABLE Parqueadero
	IS 'Entidad que representa los parqueaderos'
;

COMMENT ON COLUMN Parqueadero.v_nfs
	IS 'Es el conjunto de carteristicas que definen en nivel de servicio con respecto a la cantidad de pisos, el material y numero de cupos. '
;

COMMENT ON COLUMN Parqueadero.q_areas
	IS 'Representa la cantidad de areas que dividen el parquadero'
;

COMMENT ON COLUMN Parqueadero.n_direccion
	IS 'ubiaci贸n exacta atravez de notaci贸n de calles y carreras de donde se ubica el parqueadero.'
;

COMMENT ON COLUMN Parqueadero.n_localidad
	IS 'Localidad donde se ubica el parqueadero, estandariza el valor de demanda zonal del parqueadero.(fnz)'
;

COMMENT ON TABLE Parqueadero_Tarifa
	IS 'Tabal de rompimiento de la relaci贸n entre las entidades parqueadero y tarifa.'
;

COMMENT ON COLUMN Parqueadero_Tarifa.k_idParqueadero
	IS 'identificar de la entidad Parqueadero.'
;

COMMENT ON COLUMN Parqueadero_Tarifa.k_codigoTarifa
	IS 'identificar de la entidad Tarifa.'
;

COMMENT ON TABLE Servicio
	IS 'Esta entidad representa el registro de las entradas y salidas de vehiculos del parquadero'
;

COMMENT ON COLUMN Servicio.k_idServicio
	IS 'identificador del servicio'
;

COMMENT ON COLUMN Servicio.f_FYCEntrada
	IS 'Fecha y hora de entrada de un vehiculo.'
;

COMMENT ON COLUMN Servicio.f_FYCSalida
	IS 'Fecha y hora de salida de un vehiculo.'
;

COMMENT ON COLUMN Servicio.q_valorAPagar
	IS 'valor a pagar por la duraci贸n del servicio.'
;

COMMENT ON COLUMN Servicio.k_idVehiculo
	IS 'identificador del vehiculo.'
;

COMMENT ON TABLE Tarifa
	IS 'Entidad que representa los precios ha aplicar a los vehiculos dependiendo de las variables declaradas por la ley colombiana.'
;

COMMENT ON COLUMN Tarifa.k_codigoTarifa
	IS 'identificador del parqueadero.'
;

COMMENT ON COLUMN Tarifa.q_precioPorMinuto
	IS 'tarifa a cobrar por el minuto de servicio de parqueadero.'
;

COMMENT ON COLUMN Tarifa.i_tipo
	IS 'Se describe el tipo guiandose por las especifiaciones del parqueadero y los tipos de vehiculo que este acepta '
;

COMMENT ON TABLE Vehiculo
	IS 'Esta entidad representa los vehiculos que hacen uso del sistema de parqueaderos.'
;

COMMENT ON COLUMN Vehiculo.k_idVehiculo
	IS 'Identificador del vehiculo.'
;

COMMENT ON COLUMN Vehiculo.n_marca
	IS 'marca predominante en el vehiculo'
;

COMMENT ON COLUMN Vehiculo.n_color
	IS 'color predominante el vehiculo.'
;

COMMENT ON COLUMN Vehiculo.i_tipo
	IS 'Es el indicador que representa el tipo de vehiculo.  1 - carro  2- campero  3-camioneta  4-vehiculos pesados  5-motocicletas   6-bicicletas'
;
/*
--EL id se halla con el FNS*100 + tipo de vehiculo-- 
--carro fns= 1--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(101, 110,'carro fns= 1');
--carro fns= 0.9--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(91, 99,'carro fns= 9');
--carro fns= 0.8--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(81, 88,'carro fns= 8');
--carro fns= 0.7--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(71, 77,'carro fns= 7');
--carro fns= 0.6--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(61, 66,'carro fns= 6');
--carro fns= 0.5--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(51, 55,'carro fns= 5');

--campero fns= 1--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(102, 110,'campero fns= 1');
--campero  fns= 0.9--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(92, 99,'campero fns= 9');
--campero  fns= 0.8--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(82, 88,'campero fns= 8');
--campero  fns= 0.7--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(72, 77,'campero fns= 7');
--campero  fns= 0.6--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(62, 66,'campero fns= 6');
--campero  fns= 0.5--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(52, 55,'carro fns= 5');

--camioneta fns= 1--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(103, 110,'camioneta fns= 1');
--camioneta  fns= 0.9--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(93, 99,'camioneta fns= 9');
--camioneta  fns= 0.8--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(83, 88,'camioneta fns= 8');
--camioneta  fns= 0.7--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(73, 77,'camioneta fns= 7');
--camioneta  fns= 0.6--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(63, 66,'camioneta fns= 6');
--camioneta  fns= 0.5--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(53, 55,'camioneta fns= 5');

--vehiculos pesados fns= 1--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(104, 110,'vehiculos pesados fns= 1');
--vehiculos pesados  fns= 0.9--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(94, 99,'vehiculos pesados fns= 9');
--vehiculos pesados  fns= 0.8--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(84, 88,'vehiculos pesados fns= 8');
--vehiculos pesados  fns= 0.7--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(74, 77,'vehiculos pesados fns= 7');
--vehiculos pesados  fns= 0.6--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(64, 66,'vehiculos pesados fns= 6');
--vehiculos pesados  fns= 0.5--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(54, 55,'vehiculos pesados fns= 5');

--moto fns= 1--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(105, 77,'moto fns= 1');
--moto  fns= 0.9--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(95, 69,'moto fns= 9');
--moto  fns= 0.8--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(85, 62,'moto fns= 8');
--moto  fns= 0.7--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(75, 54,'moto fns= 7');
--moto  fns= 0.6--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(65, 46,'moto fns= 6');
--moto  fns= 0.5--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(55, 39,'moto fns= 5');

--ciclas fns= 1--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(106, 10,'ciclas fns= 1');
--ciclas  fns= 0.9--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(96, 10,'ciclas fns= 9');
--ciclas  fns= 0.8--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(86, 10,'ciclas fns= 8');
--ciclas  fns= 0.7--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(76, 10,'ciclas fns= 7');
--ciclas  fns= 0.6--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(66, 10,'ciclas fns= 6');
--ciclas  fns= 0.5--
INSERT INTO tarifa(k_codigotarifa, q_precioporminuto,i_tipo) VALUES(56, 10,'ciclas fns= 5');
*/
